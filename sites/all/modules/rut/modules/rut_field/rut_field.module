<?php

/**
 * @file
 * Defines rut field.
 */

/**
 * Implements hook_field_info().
 */
function rut_field_field_info() {
  return array(
    'rut_field' => array(
      'label' => t('Rut Field'),
      'description' => t('Field to store RUN or RUT.'),
      'default_widget' => 'rut_field_widget',
      'default_formatter' => 'rut_field_default',
      'instance_settings' => array(
        'validate_js' => FALSE,
        'message_js'  => '',
      ),
    ),
  );
}


/**
 * Implements hook_field_instance_settings_form().
 */
function rut_field_field_instance_settings_form($field, $instance) {
  $settings = $instance['settings'];

  $form['validate_js'] = array(
    '#type' => 'checkbox',
    '#title' => t('Javascript validator'),
    '#default_value' => $settings['validate_js'],
  );
  $form['message_js'] = array(
    '#type' => 'textfield',
    '#title' => t('Message by js'),
    '#description' => t('Define the message to display if the javascript validator is checked'),
    '#default_value' => $settings['message_js'],
  );

  return $form;
}


/**
 * Implements hook_field_is_empty().
 */
function rut_field_field_is_empty($item, $field) {
  if (empty($item['value'])) {
    return TRUE;
  }
  return FALSE;
}


/**
 * Implements hook_field_widget_info().
 */
function rut_field_field_widget_info() {
  return array(
    'rut_field_widget' => array(
      'label' => t('Rut'),
      'field types' => array('rut_field'),
    ),
  );
}


/**
 * Implements hook_field_widget_form().
 */
function rut_field_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $settings = $instance['settings'];
  $rut = isset($items[$delta]['rut']) ? $items[$delta]['rut'] : '';
  $dv = isset($items[$delta]['dv']) ? $items[$delta]['dv'] : '';

  $rut_element = array(
    '#type' => 'rut_field',
    '#default_value' => rut_formatter_rut($rut, $dv),
  );


  if ($settings['validate_js']) {
    $rut_element['#validate_js'] = TRUE;
    $rut_element['#message_js'] = $settings['message_js'];
  }

  $element += $rut_element;
  return array('value' => $element);
}


/**
 * Implements hook_field_presave().
 */
function rut_field_field_presave($entity_type, $entity, $field, $instance, $langcode, &$items) {
  foreach($items as $delta => $item) {
    if (isset($item['value'])) {
      list($rut, $dv) = rut_separate_rut($item['value']);
      $items[$delta] = array(
        'rut' => $rut,
        'dv'  => $dv,
      );
    }
  }
}


/**
 * Implements hook_field_formatter_info().
 */
function rut_field_field_formatter_info() {
  return array(
    'rut_field_default' => array(
      'label' => t('Rut'),
      'field types' => array('rut_field'),
    ),
  );
}


/**
 * Implements hook_field_formatter_view().
 */
function rut_field_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  foreach ($items as $delta => $item) {
    $output = rut_formatter_rut($item['rut'], $item['dv']);
    $element[$delta] = array('#markup' => $output);
  }

  return $element;
}


/**
 * Implements hook_views_api().
 */
function rut_field_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'rut_field') . '/includes',
  );
}
