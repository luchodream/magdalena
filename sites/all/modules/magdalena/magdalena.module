<?php

/**
 * Implements hook_init().
 */
function magdalena_init() {
  drupal_add_js(array('magdalena' => array('fb_api' => variable_get('fb_api'))), 'setting');
   // Add facebook SDK
  drupal_add_js('(function(d, s, id){
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) {return;}
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/es_LA/all.js";
    fjs.parentNode.insertBefore(js, fjs);
    }(document, \'script\', \'facebook-jssdk\'));', array('type' => 'inline', 'scope' => 'footer', 'weight' => 5)
  );
  // Add addthis JS
  drupal_add_js('http://s7.addthis.com/js/300/addthis_widget.js#pubid=ra-52c0d5620dc992cc', 'external');  
  // JS for general purpouses
  drupal_add_js(drupal_get_path('module', 'magdalena') . '/js/magdalena.js');
}

/*
 * Implements hook_menu().
 */

function magdalena_menu() {
  $items['test'] = array(
    'title' => 'Test page',
    'page callback' => 'magdalena_test_page',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['admin/magdalena'] = array(
    'title' => 'Administracion General',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('magdalena_global_settings_form'),
    'access arguments' => array('administer magdalena'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/holidays/add'] = array(
    'title' => 'Agregar Feriado',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('magdalena_add_holiday_form'),
    'access arguments' => array('administer holidays'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/holidays/delete/%'] = array(
    'title' => 'Eliminar Feriado',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('magdalena_delete_holiday_form', 3),
    'access arguments' => array('administer holidays'),
    'type' => MENU_CALLBACK,
  );    
  return $items;
}

/**
 * Site configuration form
 */
function magdalena_global_settings_form() {
  $form['global'] = array(
    '#type' => 'fieldset',
    '#title' => t('General'),
    '#collapsible' => true,
  );
  $form['global']['fb_api'] = array(
    '#type' => 'textfield',
    '#title' => t('Facebook API Key'),
    '#default_value' => variable_get('fb_api'),
  );
  $form['global']['fb_secret'] = array(
    '#type' => 'textfield',
    '#title' => t('Facebook API Private Key'),
    '#default_value' => variable_get('fb_secret'),
  );  
  $form['global']['fb_like_page'] = array(
    '#type' => 'textfield',
    '#title' => t('Facebook Page URL'),
    '#description' => t('Like box page URL'),
    '#default_value' => variable_get('fb_like_page'),
  );
  return system_settings_form($form);
}

/**
 * Implements hook_block_info().
 */
function magdalena_block_info() {
  $blocks['contact_info'] = array(
    'info' => t('Contact info'),
  );
  $blocks['contact_phone'] = array(
    'info' => t('Contact phone numbers'),
  );
  $blocks['like_box'] = array(
    'info' => t('Like box'),
  ); 
  $blocks['social_top'] = array(
    'info' => t('Social top'),
  );
  $blocks['user_menu'] = array(
    'info' => t('User menu'),
  );
  $blocks['facebook_comments']= array(
    'info' => t('Facebook comments'),
  );
  $blocks['shopping_cart']= array(
    'info' => t('Shopping cart'),
  );
  $blocks['addthis_share']= array(
    'info' => t('Addthis share'),
  );  
  $blocks['addthis_share_tiny']= array(
    'info' => t('Addthis share tiny'),
  );   
  $blocks['back_button']= array(
    'info' => t('Back button'),
  ); 
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function magdalena_block_view($delta) {
  $block = array();
  switch ($delta) {
    case 'contact_info':
      $block['content'] = theme('contact_info_block');
      break;
    case 'contact_phone':
      $block['content'] = theme('contact_phone_block');
      break;
    case 'like_box':
      $block['content'] = theme('magdalena_like_box');
      break;
    case 'social_top':
      $block['content'] = theme('magdalena_social_top');
      break; 
    case 'user_menu':
      global $user;      
      if($user->uid) $block['content'] = theme('magdalena_user_menu', array('user' => $user));
      break;
    case 'facebook_comments':
      if(arg(0) == 'node' && arg(1)) $block['content'] = theme('magdalena_facebook_comments', array('nid' => arg(1)));
      break;      
    case 'shopping_cart':
      $block['content'] = _magdalena_build_shopping_cart();
      break;
    case 'addthis_share':
      $block['content'] = theme('magdalena_addthis_share');
      break;
    case 'addthis_share_tiny':
      $block['content'] = theme('magdalena_addthis_share_tiny');
      break;       
    case 'back_button':
      $block['content'] = theme('magdalena_back_button');
      break;      
  }
  return $block;
}

/**
 * Implements hook_permission().
 * @return type
 */
function magdalena_permission() {
  return array(
    'administer magdalena' => array(
      'title' => t('Administrar Magdalena'),
      'description' => t('Perform administration tasks for Magdalena.'),
    ),
    'administer holidays' => array(
      'title' => t('Administrar Feriados'),
      'description' => t('Administer holidays for the site.'),
    ),    
  );
}

/**
 * 
 */
function magdalena_add_holiday_form($form, &$form_state) {
  $form['title'] = array(
    '#type'  => 'textfield', 
    '#title' => t('Title'),
  );
  $form['day'] = array(
    '#type'  => 'select', 
    '#title' => t('Day'),
    '#options' => array_combine(range(1,31), range(1,31)),
  );
  $form['month'] = array(
    '#type'  => 'select', 
    '#title' => t('Month'),
    '#options' => array(
        1 => t('January'), 2 => t('February'), 3 => t('March'),
        4 => t('April'), 5 => t('May'), 6 => t('June'),
        7 => t('July'), 8 => t('August'), 9 => t('September'),
        10 => t('October'), 11 => t('November'), 12 => t('December'),
    ),
  );
  $form['submit'] = array(
    '#type'  => 'submit', 
    '#value' => t('Add'),
  );
  return $form;
}

/**
 * Validate handler for magdalena_add_holiday_form
 */
function magdalena_add_holiday_form_validate($form, &$form_state) {
  if(!in_array($form_state['values']['day'], range(1, 31))){
    form_set_error('day', t('Día no válido'));
  }
  if(!in_array($form_state['values']['month'], range(1, 12))){
    form_set_error('month', t('Mes no válido'));
  }  
}

/**
 * Submit handler for magdalena_add_holiday_form
 */
function magdalena_add_holiday_form_submit($form, &$form_state) {
  $fields = array(
      'day' => $form_state['values']['day'], 
      'month' => $form_state['values']['month'], 
      'title' => $form_state['values']['title']
  );
  drupal_write_record('magdalena_holidays', $fields);
  drupal_set_message(t('Feriado agregado correctamente'));
}


/**
 *
 */
function magdalena_delete_holiday_form($form, &$form_state, $hid){
  $form_state['storage']['hid'] = $hid;
  $form['help'] = array(
    '#markup' => t('¿Esta seguro que desea realizar esta acción?'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Delete'),
  );
  return $form;
}

/**
 * Submit handler for magdalena_delete_holiday_form
 */
function magdalena_delete_holiday_form_submit($form, &$form_state) {
  db_delete('magdalena_holidays')
    ->condition('hid', $form_state['storage']['hid'])
    ->execute();
  drupal_set_message(t('Feriado eliminado correctamente'));
  $form_state['redirect'] = 'admin/holidays';
}


/**
 * Helper: build shopping cart
 */
function _magdalena_build_shopping_cart(){
  global $user;
  $quantity = 0;
  $total    = array('amount' => 0, 'currency_code' => commerce_default_currency());
  $order    = commerce_cart_order_load($user->uid);
  if ($order) {
      $wrapper    = entity_metadata_wrapper('commerce_order', $order);
      $line_items = $wrapper->commerce_line_items;
      $quantity   = commerce_line_items_quantity($line_items, commerce_product_line_item_types());
      $total      = commerce_line_items_total($line_items);
      $currency   = commerce_currency_load($total['currency_code']);
  }
  return theme('magdalena_shopping_cart', array('quantity' => $quantity, 'total' => $total));
}

/**
 * Implement hook_theme().
 */
function magdalena_theme($existing, $type, $theme, $path) {
  return array(
    'contact_phone_block' => array(
      'template' => 'block--contact-phone',
      'path' => drupal_get_path('module', 'magdalena') . '/templates',
    ),
    'contact_info_block' => array(
      'template' => 'block--contact-info',
      'path' => drupal_get_path('module', 'magdalena') . '/templates',
    ),
    'magdalena_social_top' => array(
      'template' => 'block--social-top',
      'path' => drupal_get_path('module', 'magdalena') . '/templates',
    ),    
    'magdalena_like_box' => array(
      'template' => 'block--like-box',
      'path' => drupal_get_path('module', 'magdalena') . '/templates',
    ),
    'magdalena_shopping_cart' => array(
      'template' => 'block--shopping-cart',
      'path' => drupal_get_path('module', 'magdalena') . '/templates',
      'variables' => array(
        'quantity' => 0,
        'total'    => 0,
      ),        
    ),    
    'magdalena_user_menu' => array(
      'template' => 'block--user-menu',
      'path' => drupal_get_path('module', 'magdalena') . '/templates',
      'variables' => array(
        'user' => NULL,
      ),      
    ), 
    'magdalena_facebook_comments' => array(
      'template' => 'block--facebook-comments',
      'path' => drupal_get_path('module', 'magdalena') . '/templates',
      'variables' => array(
        'user' => NULL,
      ),      
    ),
    'magdalena_addthis_share' => array(
      'template' => 'block--addthis',
      'path' => drupal_get_path('module', 'magdalena') . '/templates',    
    ),
    'magdalena_addthis_share_tiny' => array(
      'template' => 'block--addthis-tiny',
      'path' => drupal_get_path('module', 'magdalena') . '/templates',    
    ),    
    'magdalena_back_button' => array(
      'template' => 'block--back-button',
      'path' => drupal_get_path('module', 'magdalena') . '/templates',    
    ),    
  );
}

/**
 * Implements hook_library().
 */
function magdalena_library() {
  $libraries['jquery_ui_spinner'] = array(
    'title' => 'jQuery Spinner',
    'website' => 'http://github.com/btburnett3/jquery.ui.spinner/',
    'version' => '1.8',
    'js' => array(
      libraries_get_path('jquery.ui.spinner') . '/ui.spinner.min.js' => array(),
    ),
    'css' => array(
      libraries_get_path('jquery.ui.spinner') . '/ui.spinner.css' => array(),
    ),
    'dependencies' => array(
      array('system', 'ui.widget'),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_form_alter().
 */
function magdalena_form_alter(&$form, &$form_state, $form_id) {  

  switch ($form_id) {
    case 'commerce_checkout_form_checkout':    
      $comuna = taxonomy_vocabulary_machine_name_load('comuna');
      if (!empty($comuna)) {
        $comunas = taxonomy_get_tree($comuna->vid, 0, NULL, TRUE);
      }
      $allowed_days = new stdClass();
      foreach ($comunas as $comuna) {        
        $fields = field_get_items('taxonomy_term', $comuna, 'field_dias_habiles');        
        foreach ($fields as $field) {
          $allowed_days->{$comuna->tid}[] = $field['value'];
        }       
      }
      drupal_add_js(array('allowed_days' => $allowed_days), 'setting');
      
      drupal_add_library('system', 'ui.datepicker');
      $form['#attached']['js'][] = drupal_get_path('module', 'magdalena') . '/js/magdalena_checkout.js';      
      break;
  }
  if (strstr($form_id, 'commerce_cart_add_to_cart_form') || $form_id == 'views_form_commerce_cart_form_default') {
    $form['#attached']['library'][] = array('magdalena', 'jquery_ui_spinner');
  }
}

/**
 * Implements hook_views_api().
 */
function magdalena_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'magdalena'),
  );
}